<Window x:Class="KalkulationApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KalkulationApp"
        mc:Ignorable="d"
        Title="Kalkulation" Height="1000" Width="1100"
        FontFamily="Segoe UI"
        WindowState="Maximized">

    <Window.Resources>
        <DataTemplate x:Key="comboBoxItemTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Nummer}"/>
                <TextBlock Text=" - "/>
                <TextBlock Text="{Binding Bezeichnung}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="speicherOrtItemTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Bezeichnung}"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

    <Grid Margin="14">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Speicherort wählen: " FontSize="14" Margin="0 0 0 3"/>
                <TextBlock Text="Anzahl " Margin="14 0 0 0" FontWeight="Light" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding SpeicherOrte.Count}" FontWeight="Light" VerticalAlignment="Center"/>
            </StackPanel>
            <ComboBox ItemsSource="{Binding SpeicherOrte}"
                  SelectedItem="{Binding SelectedSpeicherOrt}"
                      ItemTemplate="{StaticResource speicherOrtItemTemplate}"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Margin="0 14 0 0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Projekt wählen: " FontSize="14" Margin="0 0 0 3"/>
                <TextBlock Text="Anzahl " Margin="14 0 0 0" FontWeight="Light" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Projekte.Count}" FontWeight="Light" VerticalAlignment="Center"/>
            </StackPanel>
            <ComboBox ItemsSource="{Binding Projekte}"
                  SelectedItem="{Binding SelectedProjekt}"
                      ItemTemplate="{StaticResource comboBoxItemTemplate}"/>
        </StackPanel>

        <StackPanel Grid.Row="2" Margin="0 14 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Leistungsverzeichnis wählen: " FontSize="14" Margin="0 0 0 3"/>
                    <TextBlock Text="Anzahl " Margin="14 0 0 0" FontWeight="Light" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Lvs.Count}" FontWeight="Light" VerticalAlignment="Center"/>
                </StackPanel>
                <ComboBox ItemsSource="{Binding Lvs}" SelectedItem="{Binding SelectedLv}"
                          ItemTemplate="{StaticResource comboBoxItemTemplate}" Grid.Row="1"/>

                <local:UcSpinnerApple x:Name="WaitSpinner1" Visibility="Collapsed" Margin="7 0 7 0" Grid.Column="1" Grid.Row="1"/>

                <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="7 0 0 3">
                    <TextBlock Text="Kalkulation wählen: " FontSize="14" Margin="0 0 0 3"/>
                    <TextBlock Text="Anzahl " Margin="14 0 0 0" FontWeight="Light" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Kalkulationen.Count}" FontWeight="Light" VerticalAlignment="Center"/>
                </StackPanel>
                <ComboBox ItemsSource="{Binding Kalkulationen}" SelectedItem="{Binding SelectedKalkulation}"
                          ItemTemplate="{StaticResource comboBoxItemTemplate}"
                          Grid.Row="1" Grid.Column="2" Margin="7 0 0 0"/>

                <local:UcSpinnerApple x:Name="WaitSpinner2" Visibility="Collapsed" Margin="7 0 7 0" Grid.Column="3" Grid.Row="1"/>

                <!--Suchen und ersetzen von Variablen-->
                <Grid Grid.Column="2" Grid.Row="2" Margin="14">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox x:Name="CheckVarErsetzen"
                    Content="Ansatz der Variable &quot;sk&quot; ersetzen durch die Kosten der Eigenleistung" 
                    IsChecked="True" VerticalAlignment="Center" IsEnabled="False"/>
                    <Button Click="Go_Click" Content="Ausführen" Grid.Column="1" Margin="7 0 0 0" Height="25" Width="100"/>
                    <local:UcSpinnerApple x:Name="WaitSpinner3" Visibility="Collapsed" Margin="7 0 0 0" Grid.Column="2"/>

                    <CheckBox Grid.Column="0" Grid.Row="1" Margin="21 0 0 0"
                    IsChecked="{Binding ErsetzeNurGefiltertePositionen, UpdateSourceTrigger=PropertyChanged}" 
                    Content="Nur gefilterte Positionen ersetzen"/>
                    <TextBlock x:Name="TxtErsetzenOk" Grid.Row="2" VerticalAlignment="Center" Margin="21 0 0 0"/>
                </Grid>
            </Grid>
        </StackPanel>

        <!--Kalkulationsdetails-->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".50*"/>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--Überschrift Kalkulation-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Suchen" FontSize="14"/>
                <TextBox Text="{Binding LvDetails.SearchText, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="7 0 7 0"/>
            </Grid>
            
            <StackPanel Orientation="Horizontal" Margin="0 0 0 3" Grid.Column="2">
                <TextBlock Text="Kalkulationsblatt: " FontSize="14"/>
                <TextBlock FontSize="14">
                    <TextBlock.Text>
                        <MultiBinding StringFormat=" {0} - {1}">
                            <Binding Path="SelectedKalkulation.Nummer" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
                            <Binding Path="SelectedKalkulation.Bezeichnung" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>

            <!--Selektierte LV-Position anzeigen-->
            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1">
                <TextBlock Text="Ausgewählte LV-Position:" FontSize="14" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding SelectedLvPosition, UpdateSourceTrigger=PropertyChanged}" Margin="7 0 0 0"/>
            </StackPanel>
            
            <!--LV Positionen anzeigen-->
            <TreeView Name="Tv" Margin="0 7 7 0" Grid.Row="3" SelectedItemChanged="Tv_SelectedItemChanged">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type local:LvPosition}" ItemsSource="{Binding ItemNodes}">
                        <TextBlock Text="{Binding NummerUndBezeichnung}" TextWrapping="Wrap"/>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type local:LvNode}" ItemsSource="{Binding ItemNodes}">
                        <TextBlock Text="{Binding NummerUndBezeichnung}" FontWeight="DemiBold" Margin="3"/>
                    </HierarchicalDataTemplate>
                    
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" Grid.Row="3" Margin="0 7 0 0" Background="LightGray"/>
            
            <!--Kalkulationsblatt anzeigen zur ausgewählten Position-->
            <DataGrid x:Name="Datagrid" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                      BorderThickness="0.5"
                      ItemsSource="{Binding SelectedKalkulationsblatt.Zeilen, UpdateSourceTrigger=PropertyChanged}" 
                      Grid.Column="2" Grid.Row="3" AutoGenerateColumns="False" Margin="5 7 0 0"
                      HorizontalGridLinesBrush="Transparent"
                      VerticalGridLinesBrush="Transparent">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsUpZeile}" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Header="Inaktiv" Binding="{Binding Path=Inaktiv}"/>
                    <DataGridTextColumn Header="Nummer" Binding="{Binding Path=Nummer}"/>
                    <DataGridTextColumn Header="Variable" Binding="{Binding Path=Variable}" Foreground="Green"/>
                    <DataGridTextColumn Header="Ansatz" Binding="{Binding Path=Ansatz}"/>
                    <DataGridTextColumn Header="Bezeichnung" Binding="{Binding Path=Bezeichnung}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="BAS" Binding="{Binding Path=BAS}"/>
                    <DataGridTemplateColumn Header="Ergebnis">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Ergebnis, StringFormat=F4}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Gesamtmenge">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Gesamtmenge, StringFormat=F4}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="EH" Binding="{Binding EH}"/>
                    <DataGridTemplateColumn Header="KostenJeEH">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding KostenJeEH, StringFormat=F4}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Kosten">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Kosten, StringFormat=F4}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Preis">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Preis, StringFormat=F4}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Prod. Stunden">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ProduktiveStunden, StringFormat=F2}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Kommentar" Binding="{Binding Kommentar}"/>
                    <DataGridTextColumn Header="Bieter" Binding="{Binding Bieter}"/>
                    <DataGridTextColumn Header="Markierungskennzeichen" Binding="{Binding Markierungskennzeichen}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid >

        <StackPanel Orientation="Horizontal" Grid.Row="4" Margin="0 14 0 0" HorizontalAlignment="Right">
            <Button Content="Schließen" HorizontalAlignment="Right" Width="120"
                    Click="Button_Click"/>
        </StackPanel>
    </Grid>
</Window>
